name: Plan Workflow

on:
  pull_request:
    branches:
      - develop
      - staging
      - main


jobs:
  determine-env-outputs:
    runs-on: ubuntu-latest
    outputs:
      terraform-env-list: ${{ steps.set-outputs.outputs.terraform-env-list }}
      terraform-vpc-env-list: ${{ steps.set-outputs.outputs.terraform-vpc-env-list }}
    steps:
      - name: Determine env outputs
        id: set-outputs
        run: |
          if [ "${GITHUB_BASE_REF}" == "develop" ]; then
            echo 'terraform-env-list=["dev"]' >> $GITHUB_OUTPUT
            echo 'terraform-vpc-env-list=["dev"]' >> $GITHUB_OUTPUT
          elif [ "${GITHUB_BASE_REF}" == "staging" ]; then
            echo 'terraform-env-list=["staging","loadtest"]' >> $GITHUB_OUTPUT
            echo 'terraform-vpc-env-list=["staging"]' >> $GITHUB_OUTPUT
          elif [ "${GITHUB_BASE_REF}" == "main" ]; then
            echo 'terraform-env-list=["prod"]' >> $GITHUB_OUTPUT
            echo 'terraform-vpc-env-list=["prod"]' >> $GITHUB_OUTPUT
          else
            echo 'terraform-env-list=[]' >> $GITHUB_OUTPUT
            echo 'terraform-vpc-env-list=[]' >> $GITHUB_OUTPUT
          fi

  terraform-plan-vpc:
    runs-on: ubuntu-latest
    needs: determine-env-outputs
    environment: AWS
    strategy:
      matrix:
        env: ${{ fromJSON(needs.determine-env-outputs.outputs.terraform-vpc-env-list) }}
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Call Terraform VPC Plan
        uses: ./.github/actions/terraform_plan
        with:
          env: ${{ matrix.env }}
          directory: "terraform_vpc"

  terraform-plan:
    runs-on: ubuntu-latest
    needs: [determine-env-outputs, terraform-plan-vpc]
    environment: AWS
    strategy:
      matrix:
        env: ${{ fromJSON(needs.determine-env-outputs.outputs.terraform-env-list) }}
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Call Terraform Plan
        uses: ./.github/actions/terraform_plan
        with:
          env: ${{ matrix.env }}
          directory: "terraform"
